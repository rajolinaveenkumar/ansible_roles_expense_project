# - name: Install MySQL libraries
#   ansible.builtin.pip:
#     name: "{{ item }}"
#     executable: pip3.9
#   loop:
#     - PyMySQL
#     - cryptography

- name: include common role to install python libs # Run tasks/python-libs.yaml instead of 'main'
  ansible.builtin.include_role:
    name: common
    tasks_from: python-libs

- name: install mysql
  ansible.builtin.dnf:
    name: mysql-server
    state: installed

- name: Start and enabling the mysql service
  ansible.builtin.service:
    name: mysqld
    state: started
    enabled: yes

- name: print mysql password form ssm parameter
  ansible,builtin,debug:
    msg: "{{ lookup('amazon.aws.aws_ssm', '/expense/mysql/mysql_root_password', decrypt=True ) }}"

- name: collecting mysql database information
  community.mysql.mysql_info:
    login_user: root
    # login_password: "{{ mysql_root_pwd }}"
    login_password: "{{ lookup('amazon.aws.aws_ssm', '/expense/mysql/mysql_root_password', decrypt=True ) }}"
    login_host: "{{ mysql_host }}"  # here "mysql_servers" or "<private ip >" it will take host from inventory.ini file or we can provide ip address directl
  register: mysql_info
  ignore_errors: true

- name: print mysql information
  ansible.builtin.debug:
    msg: "{{ mysql_info }}"


- name: setup root password
  ansible.builtin.command: "mysql_secure_installation --set-root-pass {{ mysql_root_pwd }} "
  when: mysql_info.failed is true